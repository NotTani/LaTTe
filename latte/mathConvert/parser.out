Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    CONTROL_ID

Grammar

Rule 0     S' -> expression
Rule 1     expression -> expression ENTITY expression
Rule 2     expression -> expression EQUALS expression
Rule 3     expression -> expression ADDSUB_OP term
Rule 4     expression -> term
Rule 5     term -> term MULT_OP factor
Rule 6     term -> term DIV_OP factor
Rule 7     term -> factor
Rule 8     factor -> ADDSUB_OP term
Rule 9     factor -> factor POWER factor
Rule 10    factor -> factor SUBSCRIPT factor
Rule 11    factor -> NUMBER
Rule 12    factor -> SYMBOL
Rule 13    factor -> MATHEMATICAL_ID OPEN_PAREN expression CLOSE_PAREN
Rule 14    factor -> OPEN_PAREN expression CLOSE_PAREN
Rule 15    factor -> OPEN_INVIS_PAREN expression CLOSE_INVIS_PAREN

Terminals, with rules where they appear

ADDSUB_OP            : 3 8
CLOSE_INVIS_PAREN    : 15
CLOSE_PAREN          : 13 14
CONTROL_ID           : 
DIV_OP               : 6
ENTITY               : 1
EQUALS               : 2
MATHEMATICAL_ID      : 13
MULT_OP              : 5
NUMBER               : 11
OPEN_INVIS_PAREN     : 15
OPEN_PAREN           : 13 14
POWER                : 9
SUBSCRIPT            : 10
SYMBOL               : 12
error                : 

Nonterminals, with rules where they appear

expression           : 1 1 2 2 3 13 14 15 0
factor               : 5 6 7 9 9 10 10
term                 : 3 4 5 6 8

Parsing method: LALR

state 0

    (0) S' -> . expression
    (1) expression -> . expression ENTITY expression
    (2) expression -> . expression EQUALS expression
    (3) expression -> . expression ADDSUB_OP term
    (4) expression -> . term
    (5) term -> . term MULT_OP factor
    (6) term -> . term DIV_OP factor
    (7) term -> . factor
    (8) factor -> . ADDSUB_OP term
    (9) factor -> . factor POWER factor
    (10) factor -> . factor SUBSCRIPT factor
    (11) factor -> . NUMBER
    (12) factor -> . SYMBOL
    (13) factor -> . MATHEMATICAL_ID OPEN_PAREN expression CLOSE_PAREN
    (14) factor -> . OPEN_PAREN expression CLOSE_PAREN
    (15) factor -> . OPEN_INVIS_PAREN expression CLOSE_INVIS_PAREN

    ADDSUB_OP       shift and go to state 2
    NUMBER          shift and go to state 5
    SYMBOL          shift and go to state 6
    MATHEMATICAL_ID shift and go to state 7
    OPEN_PAREN      shift and go to state 8
    OPEN_INVIS_PAREN shift and go to state 9

    expression                     shift and go to state 1
    term                           shift and go to state 3
    factor                         shift and go to state 4

state 1

    (0) S' -> expression .
    (1) expression -> expression . ENTITY expression
    (2) expression -> expression . EQUALS expression
    (3) expression -> expression . ADDSUB_OP term

    ENTITY          shift and go to state 10
    EQUALS          shift and go to state 11
    ADDSUB_OP       shift and go to state 12


state 2

    (8) factor -> ADDSUB_OP . term
    (5) term -> . term MULT_OP factor
    (6) term -> . term DIV_OP factor
    (7) term -> . factor
    (8) factor -> . ADDSUB_OP term
    (9) factor -> . factor POWER factor
    (10) factor -> . factor SUBSCRIPT factor
    (11) factor -> . NUMBER
    (12) factor -> . SYMBOL
    (13) factor -> . MATHEMATICAL_ID OPEN_PAREN expression CLOSE_PAREN
    (14) factor -> . OPEN_PAREN expression CLOSE_PAREN
    (15) factor -> . OPEN_INVIS_PAREN expression CLOSE_INVIS_PAREN

    ADDSUB_OP       shift and go to state 2
    NUMBER          shift and go to state 5
    SYMBOL          shift and go to state 6
    MATHEMATICAL_ID shift and go to state 7
    OPEN_PAREN      shift and go to state 8
    OPEN_INVIS_PAREN shift and go to state 9

    term                           shift and go to state 13
    factor                         shift and go to state 4

state 3

    (4) expression -> term .
    (5) term -> term . MULT_OP factor
    (6) term -> term . DIV_OP factor

    ENTITY          reduce using rule 4 (expression -> term .)
    EQUALS          reduce using rule 4 (expression -> term .)
    ADDSUB_OP       reduce using rule 4 (expression -> term .)
    $end            reduce using rule 4 (expression -> term .)
    CLOSE_PAREN     reduce using rule 4 (expression -> term .)
    CLOSE_INVIS_PAREN reduce using rule 4 (expression -> term .)
    MULT_OP         shift and go to state 14
    DIV_OP          shift and go to state 15


state 4

    (7) term -> factor .
    (9) factor -> factor . POWER factor
    (10) factor -> factor . SUBSCRIPT factor

  ! shift/reduce conflict for POWER resolved as shift
  ! shift/reduce conflict for SUBSCRIPT resolved as shift
    MULT_OP         reduce using rule 7 (term -> factor .)
    DIV_OP          reduce using rule 7 (term -> factor .)
    ENTITY          reduce using rule 7 (term -> factor .)
    EQUALS          reduce using rule 7 (term -> factor .)
    ADDSUB_OP       reduce using rule 7 (term -> factor .)
    $end            reduce using rule 7 (term -> factor .)
    CLOSE_PAREN     reduce using rule 7 (term -> factor .)
    CLOSE_INVIS_PAREN reduce using rule 7 (term -> factor .)
    POWER           shift and go to state 16
    SUBSCRIPT       shift and go to state 17

  ! POWER           [ reduce using rule 7 (term -> factor .) ]
  ! SUBSCRIPT       [ reduce using rule 7 (term -> factor .) ]


state 5

    (11) factor -> NUMBER .

    POWER           reduce using rule 11 (factor -> NUMBER .)
    SUBSCRIPT       reduce using rule 11 (factor -> NUMBER .)
    MULT_OP         reduce using rule 11 (factor -> NUMBER .)
    DIV_OP          reduce using rule 11 (factor -> NUMBER .)
    ENTITY          reduce using rule 11 (factor -> NUMBER .)
    EQUALS          reduce using rule 11 (factor -> NUMBER .)
    ADDSUB_OP       reduce using rule 11 (factor -> NUMBER .)
    $end            reduce using rule 11 (factor -> NUMBER .)
    CLOSE_PAREN     reduce using rule 11 (factor -> NUMBER .)
    CLOSE_INVIS_PAREN reduce using rule 11 (factor -> NUMBER .)


state 6

    (12) factor -> SYMBOL .

    POWER           reduce using rule 12 (factor -> SYMBOL .)
    SUBSCRIPT       reduce using rule 12 (factor -> SYMBOL .)
    MULT_OP         reduce using rule 12 (factor -> SYMBOL .)
    DIV_OP          reduce using rule 12 (factor -> SYMBOL .)
    ENTITY          reduce using rule 12 (factor -> SYMBOL .)
    EQUALS          reduce using rule 12 (factor -> SYMBOL .)
    ADDSUB_OP       reduce using rule 12 (factor -> SYMBOL .)
    $end            reduce using rule 12 (factor -> SYMBOL .)
    CLOSE_PAREN     reduce using rule 12 (factor -> SYMBOL .)
    CLOSE_INVIS_PAREN reduce using rule 12 (factor -> SYMBOL .)


state 7

    (13) factor -> MATHEMATICAL_ID . OPEN_PAREN expression CLOSE_PAREN

    OPEN_PAREN      shift and go to state 18


state 8

    (14) factor -> OPEN_PAREN . expression CLOSE_PAREN
    (1) expression -> . expression ENTITY expression
    (2) expression -> . expression EQUALS expression
    (3) expression -> . expression ADDSUB_OP term
    (4) expression -> . term
    (5) term -> . term MULT_OP factor
    (6) term -> . term DIV_OP factor
    (7) term -> . factor
    (8) factor -> . ADDSUB_OP term
    (9) factor -> . factor POWER factor
    (10) factor -> . factor SUBSCRIPT factor
    (11) factor -> . NUMBER
    (12) factor -> . SYMBOL
    (13) factor -> . MATHEMATICAL_ID OPEN_PAREN expression CLOSE_PAREN
    (14) factor -> . OPEN_PAREN expression CLOSE_PAREN
    (15) factor -> . OPEN_INVIS_PAREN expression CLOSE_INVIS_PAREN

    ADDSUB_OP       shift and go to state 2
    NUMBER          shift and go to state 5
    SYMBOL          shift and go to state 6
    MATHEMATICAL_ID shift and go to state 7
    OPEN_PAREN      shift and go to state 8
    OPEN_INVIS_PAREN shift and go to state 9

    expression                     shift and go to state 19
    term                           shift and go to state 3
    factor                         shift and go to state 4

state 9

    (15) factor -> OPEN_INVIS_PAREN . expression CLOSE_INVIS_PAREN
    (1) expression -> . expression ENTITY expression
    (2) expression -> . expression EQUALS expression
    (3) expression -> . expression ADDSUB_OP term
    (4) expression -> . term
    (5) term -> . term MULT_OP factor
    (6) term -> . term DIV_OP factor
    (7) term -> . factor
    (8) factor -> . ADDSUB_OP term
    (9) factor -> . factor POWER factor
    (10) factor -> . factor SUBSCRIPT factor
    (11) factor -> . NUMBER
    (12) factor -> . SYMBOL
    (13) factor -> . MATHEMATICAL_ID OPEN_PAREN expression CLOSE_PAREN
    (14) factor -> . OPEN_PAREN expression CLOSE_PAREN
    (15) factor -> . OPEN_INVIS_PAREN expression CLOSE_INVIS_PAREN

    ADDSUB_OP       shift and go to state 2
    NUMBER          shift and go to state 5
    SYMBOL          shift and go to state 6
    MATHEMATICAL_ID shift and go to state 7
    OPEN_PAREN      shift and go to state 8
    OPEN_INVIS_PAREN shift and go to state 9

    expression                     shift and go to state 20
    term                           shift and go to state 3
    factor                         shift and go to state 4

state 10

    (1) expression -> expression ENTITY . expression
    (1) expression -> . expression ENTITY expression
    (2) expression -> . expression EQUALS expression
    (3) expression -> . expression ADDSUB_OP term
    (4) expression -> . term
    (5) term -> . term MULT_OP factor
    (6) term -> . term DIV_OP factor
    (7) term -> . factor
    (8) factor -> . ADDSUB_OP term
    (9) factor -> . factor POWER factor
    (10) factor -> . factor SUBSCRIPT factor
    (11) factor -> . NUMBER
    (12) factor -> . SYMBOL
    (13) factor -> . MATHEMATICAL_ID OPEN_PAREN expression CLOSE_PAREN
    (14) factor -> . OPEN_PAREN expression CLOSE_PAREN
    (15) factor -> . OPEN_INVIS_PAREN expression CLOSE_INVIS_PAREN

    ADDSUB_OP       shift and go to state 2
    NUMBER          shift and go to state 5
    SYMBOL          shift and go to state 6
    MATHEMATICAL_ID shift and go to state 7
    OPEN_PAREN      shift and go to state 8
    OPEN_INVIS_PAREN shift and go to state 9

    expression                     shift and go to state 21
    term                           shift and go to state 3
    factor                         shift and go to state 4

state 11

    (2) expression -> expression EQUALS . expression
    (1) expression -> . expression ENTITY expression
    (2) expression -> . expression EQUALS expression
    (3) expression -> . expression ADDSUB_OP term
    (4) expression -> . term
    (5) term -> . term MULT_OP factor
    (6) term -> . term DIV_OP factor
    (7) term -> . factor
    (8) factor -> . ADDSUB_OP term
    (9) factor -> . factor POWER factor
    (10) factor -> . factor SUBSCRIPT factor
    (11) factor -> . NUMBER
    (12) factor -> . SYMBOL
    (13) factor -> . MATHEMATICAL_ID OPEN_PAREN expression CLOSE_PAREN
    (14) factor -> . OPEN_PAREN expression CLOSE_PAREN
    (15) factor -> . OPEN_INVIS_PAREN expression CLOSE_INVIS_PAREN

    ADDSUB_OP       shift and go to state 2
    NUMBER          shift and go to state 5
    SYMBOL          shift and go to state 6
    MATHEMATICAL_ID shift and go to state 7
    OPEN_PAREN      shift and go to state 8
    OPEN_INVIS_PAREN shift and go to state 9

    expression                     shift and go to state 22
    term                           shift and go to state 3
    factor                         shift and go to state 4

state 12

    (3) expression -> expression ADDSUB_OP . term
    (5) term -> . term MULT_OP factor
    (6) term -> . term DIV_OP factor
    (7) term -> . factor
    (8) factor -> . ADDSUB_OP term
    (9) factor -> . factor POWER factor
    (10) factor -> . factor SUBSCRIPT factor
    (11) factor -> . NUMBER
    (12) factor -> . SYMBOL
    (13) factor -> . MATHEMATICAL_ID OPEN_PAREN expression CLOSE_PAREN
    (14) factor -> . OPEN_PAREN expression CLOSE_PAREN
    (15) factor -> . OPEN_INVIS_PAREN expression CLOSE_INVIS_PAREN

    ADDSUB_OP       shift and go to state 2
    NUMBER          shift and go to state 5
    SYMBOL          shift and go to state 6
    MATHEMATICAL_ID shift and go to state 7
    OPEN_PAREN      shift and go to state 8
    OPEN_INVIS_PAREN shift and go to state 9

    term                           shift and go to state 23
    factor                         shift and go to state 4

state 13

    (8) factor -> ADDSUB_OP term .
    (5) term -> term . MULT_OP factor
    (6) term -> term . DIV_OP factor

  ! shift/reduce conflict for MULT_OP resolved as shift
  ! shift/reduce conflict for DIV_OP resolved as shift
    POWER           reduce using rule 8 (factor -> ADDSUB_OP term .)
    SUBSCRIPT       reduce using rule 8 (factor -> ADDSUB_OP term .)
    ENTITY          reduce using rule 8 (factor -> ADDSUB_OP term .)
    EQUALS          reduce using rule 8 (factor -> ADDSUB_OP term .)
    ADDSUB_OP       reduce using rule 8 (factor -> ADDSUB_OP term .)
    $end            reduce using rule 8 (factor -> ADDSUB_OP term .)
    CLOSE_PAREN     reduce using rule 8 (factor -> ADDSUB_OP term .)
    CLOSE_INVIS_PAREN reduce using rule 8 (factor -> ADDSUB_OP term .)
    MULT_OP         shift and go to state 14
    DIV_OP          shift and go to state 15

  ! MULT_OP         [ reduce using rule 8 (factor -> ADDSUB_OP term .) ]
  ! DIV_OP          [ reduce using rule 8 (factor -> ADDSUB_OP term .) ]


state 14

    (5) term -> term MULT_OP . factor
    (8) factor -> . ADDSUB_OP term
    (9) factor -> . factor POWER factor
    (10) factor -> . factor SUBSCRIPT factor
    (11) factor -> . NUMBER
    (12) factor -> . SYMBOL
    (13) factor -> . MATHEMATICAL_ID OPEN_PAREN expression CLOSE_PAREN
    (14) factor -> . OPEN_PAREN expression CLOSE_PAREN
    (15) factor -> . OPEN_INVIS_PAREN expression CLOSE_INVIS_PAREN

    ADDSUB_OP       shift and go to state 2
    NUMBER          shift and go to state 5
    SYMBOL          shift and go to state 6
    MATHEMATICAL_ID shift and go to state 7
    OPEN_PAREN      shift and go to state 8
    OPEN_INVIS_PAREN shift and go to state 9

    factor                         shift and go to state 24

state 15

    (6) term -> term DIV_OP . factor
    (8) factor -> . ADDSUB_OP term
    (9) factor -> . factor POWER factor
    (10) factor -> . factor SUBSCRIPT factor
    (11) factor -> . NUMBER
    (12) factor -> . SYMBOL
    (13) factor -> . MATHEMATICAL_ID OPEN_PAREN expression CLOSE_PAREN
    (14) factor -> . OPEN_PAREN expression CLOSE_PAREN
    (15) factor -> . OPEN_INVIS_PAREN expression CLOSE_INVIS_PAREN

    ADDSUB_OP       shift and go to state 2
    NUMBER          shift and go to state 5
    SYMBOL          shift and go to state 6
    MATHEMATICAL_ID shift and go to state 7
    OPEN_PAREN      shift and go to state 8
    OPEN_INVIS_PAREN shift and go to state 9

    factor                         shift and go to state 25

state 16

    (9) factor -> factor POWER . factor
    (8) factor -> . ADDSUB_OP term
    (9) factor -> . factor POWER factor
    (10) factor -> . factor SUBSCRIPT factor
    (11) factor -> . NUMBER
    (12) factor -> . SYMBOL
    (13) factor -> . MATHEMATICAL_ID OPEN_PAREN expression CLOSE_PAREN
    (14) factor -> . OPEN_PAREN expression CLOSE_PAREN
    (15) factor -> . OPEN_INVIS_PAREN expression CLOSE_INVIS_PAREN

    ADDSUB_OP       shift and go to state 2
    NUMBER          shift and go to state 5
    SYMBOL          shift and go to state 6
    MATHEMATICAL_ID shift and go to state 7
    OPEN_PAREN      shift and go to state 8
    OPEN_INVIS_PAREN shift and go to state 9

    factor                         shift and go to state 26

state 17

    (10) factor -> factor SUBSCRIPT . factor
    (8) factor -> . ADDSUB_OP term
    (9) factor -> . factor POWER factor
    (10) factor -> . factor SUBSCRIPT factor
    (11) factor -> . NUMBER
    (12) factor -> . SYMBOL
    (13) factor -> . MATHEMATICAL_ID OPEN_PAREN expression CLOSE_PAREN
    (14) factor -> . OPEN_PAREN expression CLOSE_PAREN
    (15) factor -> . OPEN_INVIS_PAREN expression CLOSE_INVIS_PAREN

    ADDSUB_OP       shift and go to state 2
    NUMBER          shift and go to state 5
    SYMBOL          shift and go to state 6
    MATHEMATICAL_ID shift and go to state 7
    OPEN_PAREN      shift and go to state 8
    OPEN_INVIS_PAREN shift and go to state 9

    factor                         shift and go to state 27

state 18

    (13) factor -> MATHEMATICAL_ID OPEN_PAREN . expression CLOSE_PAREN
    (1) expression -> . expression ENTITY expression
    (2) expression -> . expression EQUALS expression
    (3) expression -> . expression ADDSUB_OP term
    (4) expression -> . term
    (5) term -> . term MULT_OP factor
    (6) term -> . term DIV_OP factor
    (7) term -> . factor
    (8) factor -> . ADDSUB_OP term
    (9) factor -> . factor POWER factor
    (10) factor -> . factor SUBSCRIPT factor
    (11) factor -> . NUMBER
    (12) factor -> . SYMBOL
    (13) factor -> . MATHEMATICAL_ID OPEN_PAREN expression CLOSE_PAREN
    (14) factor -> . OPEN_PAREN expression CLOSE_PAREN
    (15) factor -> . OPEN_INVIS_PAREN expression CLOSE_INVIS_PAREN

    ADDSUB_OP       shift and go to state 2
    NUMBER          shift and go to state 5
    SYMBOL          shift and go to state 6
    MATHEMATICAL_ID shift and go to state 7
    OPEN_PAREN      shift and go to state 8
    OPEN_INVIS_PAREN shift and go to state 9

    expression                     shift and go to state 28
    term                           shift and go to state 3
    factor                         shift and go to state 4

state 19

    (14) factor -> OPEN_PAREN expression . CLOSE_PAREN
    (1) expression -> expression . ENTITY expression
    (2) expression -> expression . EQUALS expression
    (3) expression -> expression . ADDSUB_OP term

    CLOSE_PAREN     shift and go to state 29
    ENTITY          shift and go to state 10
    EQUALS          shift and go to state 11
    ADDSUB_OP       shift and go to state 12


state 20

    (15) factor -> OPEN_INVIS_PAREN expression . CLOSE_INVIS_PAREN
    (1) expression -> expression . ENTITY expression
    (2) expression -> expression . EQUALS expression
    (3) expression -> expression . ADDSUB_OP term

    CLOSE_INVIS_PAREN shift and go to state 30
    ENTITY          shift and go to state 10
    EQUALS          shift and go to state 11
    ADDSUB_OP       shift and go to state 12


state 21

    (1) expression -> expression ENTITY expression .
    (1) expression -> expression . ENTITY expression
    (2) expression -> expression . EQUALS expression
    (3) expression -> expression . ADDSUB_OP term

  ! shift/reduce conflict for ENTITY resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for ADDSUB_OP resolved as shift
    $end            reduce using rule 1 (expression -> expression ENTITY expression .)
    CLOSE_PAREN     reduce using rule 1 (expression -> expression ENTITY expression .)
    CLOSE_INVIS_PAREN reduce using rule 1 (expression -> expression ENTITY expression .)
    ENTITY          shift and go to state 10
    EQUALS          shift and go to state 11
    ADDSUB_OP       shift and go to state 12

  ! ENTITY          [ reduce using rule 1 (expression -> expression ENTITY expression .) ]
  ! EQUALS          [ reduce using rule 1 (expression -> expression ENTITY expression .) ]
  ! ADDSUB_OP       [ reduce using rule 1 (expression -> expression ENTITY expression .) ]


state 22

    (2) expression -> expression EQUALS expression .
    (1) expression -> expression . ENTITY expression
    (2) expression -> expression . EQUALS expression
    (3) expression -> expression . ADDSUB_OP term

  ! shift/reduce conflict for ENTITY resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for ADDSUB_OP resolved as shift
    $end            reduce using rule 2 (expression -> expression EQUALS expression .)
    CLOSE_PAREN     reduce using rule 2 (expression -> expression EQUALS expression .)
    CLOSE_INVIS_PAREN reduce using rule 2 (expression -> expression EQUALS expression .)
    ENTITY          shift and go to state 10
    EQUALS          shift and go to state 11
    ADDSUB_OP       shift and go to state 12

  ! ENTITY          [ reduce using rule 2 (expression -> expression EQUALS expression .) ]
  ! EQUALS          [ reduce using rule 2 (expression -> expression EQUALS expression .) ]
  ! ADDSUB_OP       [ reduce using rule 2 (expression -> expression EQUALS expression .) ]


state 23

    (3) expression -> expression ADDSUB_OP term .
    (5) term -> term . MULT_OP factor
    (6) term -> term . DIV_OP factor

    ENTITY          reduce using rule 3 (expression -> expression ADDSUB_OP term .)
    EQUALS          reduce using rule 3 (expression -> expression ADDSUB_OP term .)
    ADDSUB_OP       reduce using rule 3 (expression -> expression ADDSUB_OP term .)
    $end            reduce using rule 3 (expression -> expression ADDSUB_OP term .)
    CLOSE_PAREN     reduce using rule 3 (expression -> expression ADDSUB_OP term .)
    CLOSE_INVIS_PAREN reduce using rule 3 (expression -> expression ADDSUB_OP term .)
    MULT_OP         shift and go to state 14
    DIV_OP          shift and go to state 15


state 24

    (5) term -> term MULT_OP factor .
    (9) factor -> factor . POWER factor
    (10) factor -> factor . SUBSCRIPT factor

  ! shift/reduce conflict for POWER resolved as shift
  ! shift/reduce conflict for SUBSCRIPT resolved as shift
    MULT_OP         reduce using rule 5 (term -> term MULT_OP factor .)
    DIV_OP          reduce using rule 5 (term -> term MULT_OP factor .)
    ENTITY          reduce using rule 5 (term -> term MULT_OP factor .)
    EQUALS          reduce using rule 5 (term -> term MULT_OP factor .)
    ADDSUB_OP       reduce using rule 5 (term -> term MULT_OP factor .)
    $end            reduce using rule 5 (term -> term MULT_OP factor .)
    CLOSE_PAREN     reduce using rule 5 (term -> term MULT_OP factor .)
    CLOSE_INVIS_PAREN reduce using rule 5 (term -> term MULT_OP factor .)
    POWER           shift and go to state 16
    SUBSCRIPT       shift and go to state 17

  ! POWER           [ reduce using rule 5 (term -> term MULT_OP factor .) ]
  ! SUBSCRIPT       [ reduce using rule 5 (term -> term MULT_OP factor .) ]


state 25

    (6) term -> term DIV_OP factor .
    (9) factor -> factor . POWER factor
    (10) factor -> factor . SUBSCRIPT factor

  ! shift/reduce conflict for POWER resolved as shift
  ! shift/reduce conflict for SUBSCRIPT resolved as shift
    MULT_OP         reduce using rule 6 (term -> term DIV_OP factor .)
    DIV_OP          reduce using rule 6 (term -> term DIV_OP factor .)
    ENTITY          reduce using rule 6 (term -> term DIV_OP factor .)
    EQUALS          reduce using rule 6 (term -> term DIV_OP factor .)
    ADDSUB_OP       reduce using rule 6 (term -> term DIV_OP factor .)
    $end            reduce using rule 6 (term -> term DIV_OP factor .)
    CLOSE_PAREN     reduce using rule 6 (term -> term DIV_OP factor .)
    CLOSE_INVIS_PAREN reduce using rule 6 (term -> term DIV_OP factor .)
    POWER           shift and go to state 16
    SUBSCRIPT       shift and go to state 17

  ! POWER           [ reduce using rule 6 (term -> term DIV_OP factor .) ]
  ! SUBSCRIPT       [ reduce using rule 6 (term -> term DIV_OP factor .) ]


state 26

    (9) factor -> factor POWER factor .
    (9) factor -> factor . POWER factor
    (10) factor -> factor . SUBSCRIPT factor

  ! shift/reduce conflict for POWER resolved as shift
  ! shift/reduce conflict for SUBSCRIPT resolved as shift
    MULT_OP         reduce using rule 9 (factor -> factor POWER factor .)
    DIV_OP          reduce using rule 9 (factor -> factor POWER factor .)
    ENTITY          reduce using rule 9 (factor -> factor POWER factor .)
    EQUALS          reduce using rule 9 (factor -> factor POWER factor .)
    ADDSUB_OP       reduce using rule 9 (factor -> factor POWER factor .)
    $end            reduce using rule 9 (factor -> factor POWER factor .)
    CLOSE_PAREN     reduce using rule 9 (factor -> factor POWER factor .)
    CLOSE_INVIS_PAREN reduce using rule 9 (factor -> factor POWER factor .)
    POWER           shift and go to state 16
    SUBSCRIPT       shift and go to state 17

  ! POWER           [ reduce using rule 9 (factor -> factor POWER factor .) ]
  ! SUBSCRIPT       [ reduce using rule 9 (factor -> factor POWER factor .) ]


state 27

    (10) factor -> factor SUBSCRIPT factor .
    (9) factor -> factor . POWER factor
    (10) factor -> factor . SUBSCRIPT factor

  ! shift/reduce conflict for POWER resolved as shift
  ! shift/reduce conflict for SUBSCRIPT resolved as shift
    MULT_OP         reduce using rule 10 (factor -> factor SUBSCRIPT factor .)
    DIV_OP          reduce using rule 10 (factor -> factor SUBSCRIPT factor .)
    ENTITY          reduce using rule 10 (factor -> factor SUBSCRIPT factor .)
    EQUALS          reduce using rule 10 (factor -> factor SUBSCRIPT factor .)
    ADDSUB_OP       reduce using rule 10 (factor -> factor SUBSCRIPT factor .)
    $end            reduce using rule 10 (factor -> factor SUBSCRIPT factor .)
    CLOSE_PAREN     reduce using rule 10 (factor -> factor SUBSCRIPT factor .)
    CLOSE_INVIS_PAREN reduce using rule 10 (factor -> factor SUBSCRIPT factor .)
    POWER           shift and go to state 16
    SUBSCRIPT       shift and go to state 17

  ! POWER           [ reduce using rule 10 (factor -> factor SUBSCRIPT factor .) ]
  ! SUBSCRIPT       [ reduce using rule 10 (factor -> factor SUBSCRIPT factor .) ]


state 28

    (13) factor -> MATHEMATICAL_ID OPEN_PAREN expression . CLOSE_PAREN
    (1) expression -> expression . ENTITY expression
    (2) expression -> expression . EQUALS expression
    (3) expression -> expression . ADDSUB_OP term

    CLOSE_PAREN     shift and go to state 31
    ENTITY          shift and go to state 10
    EQUALS          shift and go to state 11
    ADDSUB_OP       shift and go to state 12


state 29

    (14) factor -> OPEN_PAREN expression CLOSE_PAREN .

    POWER           reduce using rule 14 (factor -> OPEN_PAREN expression CLOSE_PAREN .)
    SUBSCRIPT       reduce using rule 14 (factor -> OPEN_PAREN expression CLOSE_PAREN .)
    MULT_OP         reduce using rule 14 (factor -> OPEN_PAREN expression CLOSE_PAREN .)
    DIV_OP          reduce using rule 14 (factor -> OPEN_PAREN expression CLOSE_PAREN .)
    ENTITY          reduce using rule 14 (factor -> OPEN_PAREN expression CLOSE_PAREN .)
    EQUALS          reduce using rule 14 (factor -> OPEN_PAREN expression CLOSE_PAREN .)
    ADDSUB_OP       reduce using rule 14 (factor -> OPEN_PAREN expression CLOSE_PAREN .)
    $end            reduce using rule 14 (factor -> OPEN_PAREN expression CLOSE_PAREN .)
    CLOSE_PAREN     reduce using rule 14 (factor -> OPEN_PAREN expression CLOSE_PAREN .)
    CLOSE_INVIS_PAREN reduce using rule 14 (factor -> OPEN_PAREN expression CLOSE_PAREN .)


state 30

    (15) factor -> OPEN_INVIS_PAREN expression CLOSE_INVIS_PAREN .

    POWER           reduce using rule 15 (factor -> OPEN_INVIS_PAREN expression CLOSE_INVIS_PAREN .)
    SUBSCRIPT       reduce using rule 15 (factor -> OPEN_INVIS_PAREN expression CLOSE_INVIS_PAREN .)
    MULT_OP         reduce using rule 15 (factor -> OPEN_INVIS_PAREN expression CLOSE_INVIS_PAREN .)
    DIV_OP          reduce using rule 15 (factor -> OPEN_INVIS_PAREN expression CLOSE_INVIS_PAREN .)
    ENTITY          reduce using rule 15 (factor -> OPEN_INVIS_PAREN expression CLOSE_INVIS_PAREN .)
    EQUALS          reduce using rule 15 (factor -> OPEN_INVIS_PAREN expression CLOSE_INVIS_PAREN .)
    ADDSUB_OP       reduce using rule 15 (factor -> OPEN_INVIS_PAREN expression CLOSE_INVIS_PAREN .)
    $end            reduce using rule 15 (factor -> OPEN_INVIS_PAREN expression CLOSE_INVIS_PAREN .)
    CLOSE_PAREN     reduce using rule 15 (factor -> OPEN_INVIS_PAREN expression CLOSE_INVIS_PAREN .)
    CLOSE_INVIS_PAREN reduce using rule 15 (factor -> OPEN_INVIS_PAREN expression CLOSE_INVIS_PAREN .)


state 31

    (13) factor -> MATHEMATICAL_ID OPEN_PAREN expression CLOSE_PAREN .

    POWER           reduce using rule 13 (factor -> MATHEMATICAL_ID OPEN_PAREN expression CLOSE_PAREN .)
    SUBSCRIPT       reduce using rule 13 (factor -> MATHEMATICAL_ID OPEN_PAREN expression CLOSE_PAREN .)
    MULT_OP         reduce using rule 13 (factor -> MATHEMATICAL_ID OPEN_PAREN expression CLOSE_PAREN .)
    DIV_OP          reduce using rule 13 (factor -> MATHEMATICAL_ID OPEN_PAREN expression CLOSE_PAREN .)
    ENTITY          reduce using rule 13 (factor -> MATHEMATICAL_ID OPEN_PAREN expression CLOSE_PAREN .)
    EQUALS          reduce using rule 13 (factor -> MATHEMATICAL_ID OPEN_PAREN expression CLOSE_PAREN .)
    ADDSUB_OP       reduce using rule 13 (factor -> MATHEMATICAL_ID OPEN_PAREN expression CLOSE_PAREN .)
    $end            reduce using rule 13 (factor -> MATHEMATICAL_ID OPEN_PAREN expression CLOSE_PAREN .)
    CLOSE_PAREN     reduce using rule 13 (factor -> MATHEMATICAL_ID OPEN_PAREN expression CLOSE_PAREN .)
    CLOSE_INVIS_PAREN reduce using rule 13 (factor -> MATHEMATICAL_ID OPEN_PAREN expression CLOSE_PAREN .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for POWER in state 4 resolved as shift
WARNING: shift/reduce conflict for SUBSCRIPT in state 4 resolved as shift
WARNING: shift/reduce conflict for MULT_OP in state 13 resolved as shift
WARNING: shift/reduce conflict for DIV_OP in state 13 resolved as shift
WARNING: shift/reduce conflict for ENTITY in state 21 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 21 resolved as shift
WARNING: shift/reduce conflict for ADDSUB_OP in state 21 resolved as shift
WARNING: shift/reduce conflict for ENTITY in state 22 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 22 resolved as shift
WARNING: shift/reduce conflict for ADDSUB_OP in state 22 resolved as shift
WARNING: shift/reduce conflict for POWER in state 24 resolved as shift
WARNING: shift/reduce conflict for SUBSCRIPT in state 24 resolved as shift
WARNING: shift/reduce conflict for POWER in state 25 resolved as shift
WARNING: shift/reduce conflict for SUBSCRIPT in state 25 resolved as shift
WARNING: shift/reduce conflict for POWER in state 26 resolved as shift
WARNING: shift/reduce conflict for SUBSCRIPT in state 26 resolved as shift
WARNING: shift/reduce conflict for POWER in state 27 resolved as shift
WARNING: shift/reduce conflict for SUBSCRIPT in state 27 resolved as shift
